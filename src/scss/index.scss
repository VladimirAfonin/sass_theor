@import "_config.scss";
@import "partials/_mixins.scss";

@include google-font-load(Roboto); // подключаем в корне

$color: yellow;
$theme: theme-2;

@mixin font($size) {        // mixin trait
  font-size: $size;
  font-weight: bold;
}

@mixin color {
  color: white;
  @include font(12px);
}

@mixin box-shadow($shadow...) {   // оператор rest
  box-shadow: $shadow;            // перечисляем через ',' и все корректно работает
}

@mixin large-screen() {
  @media only screen and (max-width: 960px) { // медиа запрос
    @content;                                 // сюда будет помещаться типа ob_flush();
  }
}

@mixin tiny-screen() {
  @media only screen and (max-width: 320px) {
    @content;
  }
}

@function sum($from, $to) { // собственные ф-ции
  @return $from + $to;
}

@function px-to-em($px, $context: 16px) {
  @return ($px / $context) * 1em;
}

@function strip-value($value) {
  @return $value / (($value * 0) + 1);
}


body {
  background-color: $background-color;
  @include font(14px);
  @include box-shadow(1px 1px 1px 1px #eee, 2px 2px 2px black);
  p {
   font-family: Roboto;
  }

  @include large-screen {
    font-size: 125%;          // for '@content'
  }

  @include tiny-screen {
    background-color: violet;
  }
}

.error {
  border-bottom: red;
}

h3 {
  font-size: 20px;
}

.critical-error {
  @extend h3;
}

h1 {
  @extend .error;         // наследование
  color: $color;
  margin: px-to-em(30px);
  padding: strip-value(40em) * 1vh;
  &:hover {
    color: darken($color, 15%);
    size: sum(5,4);
  }

  @if $theme == theme-1 {    // условные операторы
    color: red;
  } @else if $theme == theme-2 {
    color: blue;
  } @else {
    color: green;
  }

}

@for $i from 1 through 4 {          // цикл 'for'
  .col-sx-#{$i} {
    width: $i + 2em;
  }
}

$fonts: (tiny: 8px, medium: 10px, large: 13px); // цикл 'each'
@each $name, $value in $fonts {
  .#{$name} {                     // шаблонизатор
    font-size: $value;
  }
}


$i: 5;                          // цикл 'while'
@while $i <= 11 {
 .picture-#{$i} {
   width: $i * 15%;
 }
  $i: $i + 1;           // след виток цикла
}



